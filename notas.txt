# Criar o container docker do terraform
docker build -t terraform-n8n .

# Colocar suas credenciais da AWS
aws configure

# Comando para sincronizar as credenciais do terraform com a AWS
./run-terraform.ps1 init

# Comando para criar a instancia
./run-terraform.ps1 apply

# Comando para fazer o login na instância criada (pegar o DSN publico no console da AWS)
# gerar o n8n-key.pem pelo console (EC2 --> key pair)
ssh -i "n8n-key.pem" ubuntu@ec2-18-222-109-64.us-east-2.compute.amazonaws.com

tail -f /var/log/cloud-init-output.log

# Comando para atualizar a instancia e ja faz o destroy automático
.\run-terraform.ps1 taint aws_instance.n8n
.\run-terraform.ps1 apply

#Comando para ver o output novamente
.\run-terraform.ps1 output

# Comando para destruir a instancia
.\run-terraform.ps1 destroy -auto-approve


# Script para subir as alterações no projeto para o git
./git-update.ps1 "Atualiza ec2-user-data.sh e run-terraform.ps1"

=============================================================
# Logs de erro do app
sudo usermod -aG docker ubuntu
---> faça o logout
docker logs $(docker ps -q --filter name=n8n)


# Verifica se o volume está montado
mount | grep s3fs
ls -ld /mnt/n8n-data

# Verifica se a Role está aplicada
curl http://169.254.169.254/latest/meta-data/iam/info
aws sts get-caller-identity

# Verifica se há erros no boot
cat /var/log/cloud-init-output.log



================================================
=========           BACKUP          ============
================================================

python.exe -m pip install --upgrade pip
pip install -r requirements.txt
python backup.py



Set-ExecutionPolicy RemoteSigned -Scope CurrentUser


1. Terraform Init
2. Terraform Apply
3. Terraform Destroy
4. Backup Volume
5. Restore Último Backup
6. Ver Outputs do Terraform
7. Liberar Elastic IP
0. Sair

ssh -i "n8n-key.pem" ubuntu@ec2-3-133-167-95.us-east-2.compute.amazonaws.com

tail -f /var/log/cloud-init-output.log


docker logs n8n-on-aws-nginx-1
docker exec -it n8n-on-aws-nginx-1 nginx -t
docker exec -it n8n-on-aws-nginx-1 ls -l /etc/letsencrypt/live/n8n.globalstorebr.com/

docker restart n8n-on-aws-nginx-1

docker-compose -f docker-compose-https.yml down
docker-compose -f docker-compose-https.yml up -d --force-recreate




==================================
PS C:\Users\fabia\OneDrive\Automação AI\n8n-on-aws> ./git-update.ps1 "Atualizado geral final com backup"
Verificando modificaÃ§Ãµes no repositÃ³rio...
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)        
  (use "git restore <file>..." to discard changes in working directory)
        modified:   backup_n8n/.env
        modified:   backup_n8n/backup.py
        deleted:    destroy_eip_from_tf.ps1,bkp
        deleted:    destroy_eip_from_tf.sh.old
        modified:   menu-n8n.ps1
        deleted:    menu-n8n.ps1.bkp
        deleted:    run-terraform.ps1.old

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        backup_n8n/backups/
        backup_n8n/restore.py

no changes added to commit (use "git add" and/or "git commit -a")

Adicionando arquivos alterados...
warning: in the working copy of 'menu-n8n.ps1', LF will be replaced by CRLF the next time Git touches it
Fazendo commit...
[main 2ac0185] Atualizado geral final com backup
 13 files changed, 371 insertions(+), 422 deletions(-)
 create mode 100644 backup_n8n/backups/n8n-backup-20250521-203439.json
 create mode 100644 backup_n8n/backups/n8n-backup-20250521-203828.json
 create mode 100644 backup_n8n/restore.py
 delete mode 100644 destroy_eip_from_tf.ps1,bkp
 delete mode 100644 destroy_eip_from_tf.sh.old
 delete mode 100644 docker-compose-https - Copia.yml
 delete mode 100644 ec2-user-data-final-with-restore.sh.bkp
 delete mode 100644 ec2-user-data.sh.bkp
 delete mode 100644 menu-n8n.ps1.bkp
 delete mode 100644 run-terraform.ps1.old
Enviando para o GitHub...
To https://github.com/fbignon/n8n-on-aws.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/fbignon/n8n-on-aws.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

Git atualizado com sucesso!
PS C:\Users\fabia\OneDrive\Automação AI\n8n-on-aws>
PS C:\Users\fabia\OneDrive\Automação AI\n8n-on-aws>